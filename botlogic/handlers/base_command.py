from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.types import (
    KeyboardButton,
    Message,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
)

from botlogic.handlers.database_command import identification_user, check_sub_on_chanel
from botlogic import components

town_translate = {'–º–æ—Å–∫–≤–∞': 'moskva', '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥': 'sankt-peterburg', '–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': 'novosibirsk', '–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': 'ekaterinburg', '–∫–∞–∑–∞–Ω—å': 'kazan', '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥': 'nizhniy_novgorod', '–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫': 'krasnoyarsk', '—á–µ–ª—è–±–∏–Ω—Å–∫': 'chelyabinsk', '—Å–∞–º–∞—Ä–∞': 'samara', '—É—Ñ–∞': 'ufa', '—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É': 'rostov-na-donu', '–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä': 'krasnodar', 'moskva': '–º–æ—Å–∫–≤–∞', 'sankt-peterburg': '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É–≥', 'novosibirsk': '–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', 'ekaterinburg': '–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', 'kazan': '–∫–∞–∑–∞–Ω—å', 'nizhniy_novgorod': '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥', 'krasnoyarsk': '–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫', 'chelyabinsk': '—á–µ–ª—è–±–∏–Ω—Å–∫', 'samara': '—Å–∞–º–∞—Ä–∞', 'ufa': '—É—Ñ–∞', 'rostov-na-donu': '—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É', 'krasnodar': '–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä'}



async def command_start_handler(message: Message, state: FSMContext) -> None:
    is_user_in_chanel = await check_sub_on_chanel(message=message)
    if not is_user_in_chanel:
        return
    await identification_user(message=message, state=state)

    user_info = await state.get_data()
    await message.answer(
        f'''–°—Ç–∞–Ω—å—Ç–µ <b>–ø–µ—Ä–≤—ã–º</b> –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–≤–∞—Ä—Ç–∏—Ä —É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤. <b>–û–±—Ö–æ–¥–∏—Ç–µ</b> –∫–æ–º–∏—Å—Å–∏–∏ —Ä–∏–µ–ª—Ç–æ—Ä–æ–≤. –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä –∏ –¥–æ–∑–≤–∞–Ω–∏–≤–∞–π—Ç–µ—Å—å –±—ã—Å—Ç—Ä–µ–µ <b>–≤—Å–µ—Ö</b>.\n\n<b>–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞</b> - –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª @kvm_tg''',
        reply_markup=components.keyboard
    )
    
    await message.answer(
        f'''–ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –∫–≤–∞—Ä—Ç–∏—Ä, –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <code>zT59TESr001PJ3Vl</code>\n–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å: @kvmtg''',
        reply_markup=components.start_button
    )
    

async def get_info_handler(message: Message, state: FSMContext) -> None:
    is_user_in_chanel = await check_sub_on_chanel(message=message)
    if not is_user_in_chanel:
        return
    await identification_user(message=message, state=state)
    
    user_info = await state.get_data()
    user_info_text = f'''
ü§ñ –ü—Ä–æ—Ñ–∏–ª—å
- - - - - - - - - - - - - - - - - - - - - - - -

‚≠êÔ∏è–ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ <code>{user_info['sub_end']}</code>
üåÜ–ì–æ—Ä–æ–¥ –ø–æ–∏—Å–∫–∞: <code>{town_translate[user_info['town_search']].capitalize()}</code>
ü´µID: <code>{user_info['tg_id']}</code>
üë§Username: <code>{user_info['username']}</code>
‚öôÔ∏è–§–∏–ª—å—Ç—Ä: <code>–æ—Ç {user_info["filter_start_price"]} —Ä—É–±–ª–µ–π –¥–æ {user_info["filter_end_price"]} —Ä—É–±–ª–µ–π</code>

- - - - - - - - - - - - - - - - - - - - - - - -
    '''
    await message.answer(user_info_text, reply_markup=components.keyboard)
    

async def support_handler(message: Message, state: FSMContext) -> None:
    await message.answer(
        '''
<b>–û –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ:</b>
–° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –¥–æ–∑–≤–∞–Ω–∏–≤–∞—Ç—å—Å—è –¥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤, –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –≤—ã —Å–º–æ–∂–µ—Ç–µ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä.

–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–∏—ç–ª—Ç–æ—Ä—ã —Ç–æ–∂–µ –¥–æ–∑–≤–∞–Ω–∏–≤–∞—é—Ç—Å—è –ø–µ—Ä–≤—ã–º–∏ —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å, –¥–∞–ª–µ–µ –≤—ã—Å—Ç–∞–≤–ª—è—é—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã —É–∂–µ —Å –∫–æ–º–∏—Å—Å–∏–µ–π. –ù–∞—à –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Ç—å –±—ã—Å—Ç—Ä–µ–µ.

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @kvmtg
        ''',
        reply_markup=components.keyboard
    )
